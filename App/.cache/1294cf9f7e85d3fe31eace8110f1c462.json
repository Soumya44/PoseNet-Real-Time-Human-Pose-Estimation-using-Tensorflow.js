{"dependencies":[{"name":"C:\\Users\\User\\Desktop\\posenet\\PoseNet_Demo\\package.json","includedInParent":true,"mtime":1529579045748},{"name":"C:\\Users\\User\\Desktop\\posenet\\PoseNet_Demo\\.babelrc","includedInParent":true,"mtime":1529333884000},{"name":"C:\\Users\\User\\Desktop\\posenet\\PoseNet_Demo\\node_modules\\@tensorflow-models\\posenet\\package.json","includedInParent":true,"mtime":1528759433000},{"name":"@tensorflow/tfjs","loc":{"line":1,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.argmax2d = argmax2d;\n\nvar _tfjs = require('@tensorflow/tfjs');\n\nvar tf = _interopRequireWildcard(_tfjs);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction mod(a, b) {\n    return tf.tidy(function () {\n        var floored = a.div(tf.scalar(b, 'int32'));\n        return a.sub(floored.mul(tf.scalar(b, 'int32')));\n    });\n}\nfunction argmax2d(inputs) {\n    var _a = inputs.shape,\n        height = _a[0],\n        width = _a[1],\n        depth = _a[2];\n    return tf.tidy(function () {\n        var reshaped = inputs.reshape([height * width, depth]);\n        var coords = reshaped.argMax(0);\n        var yCoords = coords.div(tf.scalar(width, 'int32')).expandDims(1);\n        var xCoords = mod(coords, width).expandDims(1);\n        return tf.concat([yCoords, xCoords], 1);\n    });\n}\n//# sourceMappingURL=argmax2d.js.map"},"hash":"72e0924e90bcb88864e782d2533fc208","cacheData":{"env":{}}}