{"dependencies":[{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\package.json","includedInParent":true,"mtime":1529665731808},{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1529333884000},{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1529667062208},{"name":"../../ops/concat_util","loc":{"line":1,"column":29}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ConcatProgram = undefined;\n\nvar _concat_util = require('../../ops/concat_util');\n\nvar concat_util = _interopRequireWildcard(_concat_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar ConcatProgram = function () {\n    function ConcatProgram(aShape, bShape) {\n        this.variableNames = ['A', 'B'];\n        this.outputShape = [];\n        this.outputShape = concat_util.computeOutShape(aShape, bShape, 1);\n        this.userCode = \"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        float value = 0.0;\\n        if (yC < \" + aShape[1] + \") {\\n          value = getA(yR, yC);\\n        } else {\\n          yC -= \" + aShape[1] + \";\\n          value = getB(yR, yC);\\n        }\\n\\n        setOutput(value);\\n      }\\n    \";\n    }\n    return ConcatProgram;\n}();\nexports.ConcatProgram = ConcatProgram;\n//# sourceMappingURL=concat_gpu.js.map"},"hash":"dd696f977fc6d6f9a287976fddb691fe","cacheData":{"env":{}}}