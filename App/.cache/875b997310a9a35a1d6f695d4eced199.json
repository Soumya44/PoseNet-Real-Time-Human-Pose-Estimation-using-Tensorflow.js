{"dependencies":[{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\package.json","includedInParent":true,"mtime":1529665731808},{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1529333884000},{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\node_modules\\@tensorflow-models\\posenet\\package.json","includedInParent":true,"mtime":1529667037240},{"name":"../keypoints","loc":{"line":1,"column":30}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.getOffsetPoint = getOffsetPoint;\nexports.getImageCoords = getImageCoords;\nexports.fillArray = fillArray;\nexports.clamp = clamp;\nexports.squaredDistance = squaredDistance;\nexports.addVectors = addVectors;\nexports.clampVector = clampVector;\n\nvar _keypoints = require('../keypoints');\n\nfunction getOffsetPoint(y, x, keypoint, offsets) {\n    return {\n        y: offsets.get(y, x, keypoint),\n        x: offsets.get(y, x, keypoint + _keypoints.NUM_KEYPOINTS)\n    };\n}\nfunction getImageCoords(part, outputStride, offsets) {\n    var heatmapY = part.heatmapY,\n        heatmapX = part.heatmapX,\n        keypoint = part.id;\n    var _a = getOffsetPoint(heatmapY, heatmapX, keypoint, offsets),\n        y = _a.y,\n        x = _a.x;\n    return {\n        x: part.heatmapX * outputStride + x,\n        y: part.heatmapY * outputStride + y\n    };\n}\nfunction fillArray(element, size) {\n    var result = new Array(size);\n    for (var i = 0; i < size; i++) {\n        result[i] = element;\n    }\n    return result;\n}\nfunction clamp(a, min, max) {\n    if (a < min) {\n        return min;\n    }\n    if (a > max) {\n        return max;\n    }\n    return a;\n}\nfunction squaredDistance(y1, x1, y2, x2) {\n    var dy = y2 - y1;\n    var dx = x2 - x1;\n    return dy * dy + dx * dx;\n}\nfunction addVectors(a, b) {\n    return { x: a.x + b.x, y: a.y + b.y };\n}\nfunction clampVector(a, min, max) {\n    return { y: clamp(a.y, min, max), x: clamp(a.x, min, max) };\n}\n//# sourceMappingURL=util.js.map"},"hash":"d57353d542763304bb48495b4127af1a","cacheData":{"env":{}}}