{"dependencies":[{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\package.json","includedInParent":true,"mtime":1529665731808},{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\.babelrc","includedInParent":true,"mtime":1529333884000},{"name":"C:\\Users\\User\\Desktop\\posenet\\demos\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1529667062208},{"name":"./shader_compiler","loc":{"line":1,"column":34}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TransposeProgram = undefined;\n\nvar _shader_compiler = require('./shader_compiler');\n\nvar TransposeProgram = function () {\n    function TransposeProgram(aShape, newDim) {\n        this.variableNames = ['A'];\n        var outputShape = new Array(aShape.length);\n        for (var i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        var dtype = (0, _shader_compiler.getCoordsDataType)(this.rank);\n        var switched = getSwitchedCoords(newDim);\n        this.userCode = \"\\n    void main() {\\n      \" + dtype + \" resRC = getOutputCoords();\\n      setOutput(getA(\" + switched + \"));\\n    }\\n    \";\n    }\n    return TransposeProgram;\n}();\nexports.TransposeProgram = TransposeProgram;\n\nfunction getSwitchedCoords(newDim) {\n    var rank = newDim.length;\n    if (rank > 4) {\n        throw Error(\"Transpose for rank \" + rank + \" is not yet supported\");\n    }\n    var originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    var switchedCoords = new Array(rank);\n    for (var i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n//# sourceMappingURL=transpose_gpu.js.map"},"hash":"380334361746224cdb590500ac6121f6","cacheData":{"env":{}}}